#!/usr/bin/env ruby

require 'bundler/setup'
require 'crawling'
require 'moister'
require 'ostruct'

module Crawling::Command
  def self.run args
    config = nil
    command = nil
    positionals = nil

    Moister::SubcommandOptionParser.new do |op|
      op.banner = 'usage: crawling [global options] command [command options]'

      op.for_all do |op|
        op.on_tail '-h', '--help', 'show this help message' do
          puts op
          exit
        end
      end

      op.on '-c', '--config dir', 'path to configuration directory', 'config_dir'
      op.on '-H', '--home dir', 'path to home directory', 'home_dir'

      op.subcommand 'cd', 'run shell in store directory'
      op.subcommand 'add', 'add files to store directory'
      op.subcommand 'get', 'get files from store directory'
      op.subcommand 'diff', 'show differences between store directory and filesystem'
      op.subcommand 'merge', 'merge differences between store directory and filesystem' do |subop|
        op.on '-m', '--merge-app app', 'command used to merge files', 'merge_app'
      end
      op.subcommand 'clone', 'clone or pull latest store using configured commands'

      parsed_cfg = op.parse(args)
      positionals = parsed_cfg.positionals
      command = parsed_cfg.command
      config = OpenStruct.new parsed_cfg[:config]
    end

    unless command
      puts 'please supply a command, see --help'
      exit
    end

    crawling = Crawling::Instance.new(**config.to_h)
    case command
    when 'cd'
      crawling.cd positionals[0]
    when 'add'
      crawling.add positionals
    when 'get'
      crawling.get positionals
    when 'diff'
      crawling.diff positionals
    when 'merge'
      crawling.merge positionals
    when 'clone'
      crawling.clone
    end
  rescue RuntimeError => e
    puts e.to_s
  rescue Interrupt => e
    exit 1
  end
end

Crawling::Command::run ARGV
